---
- name: converge
  hosts: all
  become: true
  tasks:
    # this rule should have the extra attributes 'create' updated'
    # 'tag' 'statetype' and 'disablereplyto' persisted until the end
    # of the execution of this playbook.
    - name: "Create rule with 'disablereplyto' and a tag"
      ansible.builtin.blockinfile:
        path: /conf/config.xml
        insertbefore: "</filter>"
        content: |
          <rule>
            <type>pass</type>
            <interface>lan</interface>
            <ipprotocol>inet</ipprotocol>
            <tag>test-local-tag</tag>
            <statetype>keep state</statetype>
            <direction>in</direction>
            <disablereplyto>1</disablereplyto>
            <quick>1</quick>
            <descr>[ ANSIBLE ] - Test extra attributes</descr>
            <source>
              <any>1</any>
            </source>
            <destination>
              <any>1</any>
            </destination>
            <updated>
              <username>vagrant@10.0.2.2</username>
              <time>1720772440.692</time>
              <description>/firewall_rules_edit.php made changes</description>
            </updated>
            <created>
              <username>vagrant@10.0.2.2</username>
              <time>1720772440.692</time>
              <description>/firewall_rules_edit.php made changes</description>
            </created>
          </rule>
      changed_when: false

      # Test basic functionality with different actions
    - name: "Action: Test pass action"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        action: 'pass'
        description: "New Test pass Rule"
        source:
        destination:

    - name: "Action: Test block action"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        action: 'block'
        description: "New Test block Rule"

    - name: "Action: Test reject action"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        action: 'reject'
        description: "New Test reject Rule"

      # Test basic functionality of the disabled button
    - name: "Disabled: Test disabled button"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        action: 'pass'
        description: "New Test disabled pass Rule"
        disabled: true

      # Test basic functionality of the disabled quick button
    - name: "Quick: Test pass Rule with quick disabled"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        action: 'pass'
        quick: false
        description: "New Test pass Rule with quick disabled"

      # Test different Interfaces
    - name: "Interface: Test pass Rules"
      puzzle.opnsense.firewall_rules:
        interface: "{{ item }}"
        action: 'pass'
        description: "New Test pass Rule of Interface {{ item }}"
      loop:
        - "lan"
        - "lo0"
        - "openvpn"
        - "opt2"

      # Test different Directions
    - name: "Direction: Test pass Rule with Direction in"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        action: 'pass'
        direction: in
        description: "New Test pass Rule with Direction in"

    - name: "Direction: Test pass Rule with Direction out"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        action: 'pass'
        direction: out
        description: "New Test pass Rule with Direction out"

    # Test different IPProtocols
    - name: "IPProtocol: Test pass Rule with IPProtocol IPv4"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        action: 'pass'
        ipprotocol: 'inet'
        description: "New Test pass Rule with IPv4"

    - name: "IPProtocol: Test pass Rule with IPProtocol IPv6"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        action: 'pass'
        ipprotocol: 'inet6'
        description: "New Test pass Rule with IPProtocol IPv6"

    - name: "IPProtocol: Test pass Rule with IPProtocol IPv4 + IPv6"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        action: 'pass'
        ipprotocol: 'inet46'
        description: "New Test pass Rule with IPProtocol IPv4 + IPv6"

    # Test different Protocols
    - name: "Protocol: Test pass rule for all protocols"
      puzzle.opnsense.firewall_rules:
        interface: "lan"
        action: "pass"
        protocol: "{{ item }}"
      loop:
        - "any"
        - "tcp"
        - "udp"
        - "tcp/udp"
        - "icmp"
        - "esp"
        - "ah"
        - "gre"
        - "igmp"
        - "pim"
        - "ospf"
        - "ggp"
        - "ipencap"
        - "st2"
        - "cbt"
        - "egp"
        - "igp"
        - "bbn-rcc"
        - "nvp"
        - "pup"
        - "argus"
        - "emcon"
        - "xnet"
        - "chaos"
        - "mux"
        - "dcn"
        - "hmp"
        - "prm"
        - "xns-idp"
        - "trunk-1"
        - "trunk-2"
        - "leaf-1"
        - "leaf-2"
        - "rdp"
        - "irtp"
        - "iso-tp4"
        - "netblt"
        - "mfe-nsp"
        - "merit-inp"
        - "dccp"
        - "3pc"
        - "idpr"
        - "xtp"
        - "ddp"
        - "idpr-cmtp"
        - "tp++"
        - "il"
        - "ipv6"
        - "sdrp"
        - "idrp"
        - "rsvp"
        - "dsr"
        - "bna"
        - "i-nlsp"
        - "swipe"
        - "narp"
        - "mobile"
        - "tlsp"
        - "skip"
        - "ipv6-icmp"
        - "cftp"
        - "sat-expak"
        - "kryptolan"
        - "rvd"
        - "ippc"
        - "sat-mon"
        - "visa"
        - "ipcv"
        - "cpnx"
        - "cphb"
        - "wsn"
        - "pvp"
        - "br-sat-mon"
        - "sun-nd"
        - "wb-mon"
        - "wb-expak"
        - "iso-ip"
        - "vmtp"
        - "secure-vmtp"
        - "vines"
        - "ttp"
        - "nsfnet-igp"
        - "dgp"
        - "tcf"
        - "eigrp"
        - "sprite-rpc"
        - "larp"
        - "mtp"
        - "ax.25"
        - "ipip"
        - "micp"
        - "scc-sp"
        - "etherip"
        - "encap"
        - "gmtp"
        - "ifmp"
        - "pnni"
        - "aris"
        - "scps"
        - "qnx"
        - "a/n"
        - "ipcomp"
        - "snp"
        - "compaq-peer"
        - "ipx-in-ip"
        - "carp"
        - "pgm"
        - "l2tp"
        - "ddx"
        - "iatp"
        - "stp"
        - "srp"
        - "uti"
        - "smp"
        - "sm"
        - "ptp"
        - "isis"
        - "crtp"
        - "crudp"
        - "sps"
        - "pipe"
        - "sctp"
        - "fc"
        - "rsvp-e2e-ignore"
        - "udplite"
        - "mpls-in-ip"
        - "manet"
        - "hip"
        - "shim6"
        - "wesp"
        - "rohc"
        - "pfsync"
        - "divert"

      # Source / Invert: Test basic functionality of the source/invert button
    - name: "Source / Invert: Test basic functionality of the source/invert button"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        description: "New Test source/invert enabled rule"
        source:
          invert: true

      # Source IP: Test Source IP Field
    - name: "Source IP: Test Source IP Field with address"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        description: "New Test Source IP Field with address"
        source:
          address: "192.168.0.0/24"

    - name: "Source IP: Test Source IP Field with host"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        description: "New Test Source IP Field with host"
        source:
          address: "8.8.8.8"

      # Source IP and Source Port: Test Source IP and Source Port Field
    - name: "Source IP and Source Port: Test Source IP Field with address and Port any"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        description: "New Test Source IP and Source Port Field with address and Port any"
        source:
          address: "192.168.0.0/24"
          port: "any"

    - name: "Source IP and Source Port: Test Source IP Field with address and specific Port"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        description: "New Test Source IP and Source Port Field with address and specific Port"
        source:
          address: "192.168.0.0/24"
          port: "1921"

    - name: "Source IP and Source Port: Test Source IP and Source Port Field with host and Port any"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        description: "New Test Source IP Field with host"
        source:
          address: "8.8.8.8"
          port: "any"

    - name: "Source IP and Source Port: Test Source IP Field with address and specific Port"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        description: "New Test Source IP and Source Port Field with address and specific Port"
        source:
          address: "8.8.8.8"
          port: "1921"

      # Target / Invert: Test basic functionality of the target/invert button
    - name: "Target / Invert: Test basic functionality of the target/invert button"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        description: "New Test target/invert enabled rule"
        destination:
          invert: true

      # Target IP and Target Port: Test Target IP and Target Port Field
    - name: "Target IP and Target Port:Test Target IP Field with address and Port any"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        description: "New Test Target IP and Target Port Field with address and Port any"
        destination:
          address: "192.168.0.0/24"
          port: "any"

    - name: "Target IP and Target Port: Test Target IP Field with address and specific Port"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        description: "New Test Target IP and Target Port Field with address and specific Port"
        destination:
          address: "192.168.0.0/24"
          port: "1921"

    - name: "Target IP and Target Port: Test Target IP and Target Port Field with host and Port any"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        description: "New Test Target IP Field with host"
        destination:
          address: "8.8.8.8"
          port: "any"

    - name: "Target IP and Target Port: Test Target IP Field with address and specific Port"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        description: "New Test Target IP and Target Port Field with address and specific Port"
        destination:
          address: "8.8.8.8"
          port: "1921"

      # Test basic functionality of the log button
    - name: "Log: Test pass action"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        action: 'pass'
        log: true
        description: "New Test pass Rule with log enabled"

      # Test basic functionality of categories
    - name: "Categories: Test adding one Category"
      puzzle.opnsense.firewall_rules:
        interface: 'lan'
        action: 'pass'
        category: 'TestCategory'
        description: "New Test pass Rule with one added Category"

    # TODO add support muliple categories
    # TODO add support for Advanced features: No XMLRPC Sync, Schedule and Gateway
    # TODO add support for Advanced Options

    - name: Test extra argument persistence
      block:

        - name: Read the config
          ansible.builtin.slurp:
            src: /conf/config.xml
          register: current_config

        - name: "Check that the extra attributes are still present"
          ansible.builtin.assert:
            that:
              - "'<statetype>keep state</statetype>' in ( current_config.content | b64decode )"
              - "'<time>1720772440.692</time>' in ( current_config.content | b64decode )"
              - "'<tag>test-local-tag</tag>' in ( current_config.content | b64decode )"
              - "'<disablereplyto>1</disablereplyto>' in ( current_config.content | b64decode )"